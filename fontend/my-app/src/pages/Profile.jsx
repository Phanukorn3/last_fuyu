import React, { useState, useEffect } from "react"; // üëà 1. Import useEffect
import { Link, useNavigate } from "react-router-dom";
import TextInput from "../components/TextInput";
import axios from "axios";

export default function Profile() {
  const [form, setForm] = useState({
    firstname: "",
    lastname: "",
    email: "",
    phone_number: "",
    address: "",
  });

  const navigate = useNavigate();
  const [error, setError] = useState("");

  // --- ‚¨áÔ∏è 2. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤ ---
  useEffect(() => {
    const fetchProfile = async () => {
      try {
        // **‡∏Ç‡πâ‡∏≠‡∏™‡∏±‡∏ô‡∏ô‡∏¥‡∏©‡∏ê‡∏≤‡∏ô:** axios ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á token ‡πÑ‡∏õ‡∏Å‡∏±‡∏ö request ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß
        const response = await axios.get("http://localhost:8000/api/profile/");
        const profileData = response.data;

        // ‡∏ô‡∏≥‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡πÉ‡∏™‡πà‡πÉ‡∏ô State ‡∏Ç‡∏≠‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
        setForm({
          firstname: profileData.first_name || "",
          lastname: profileData.last_name || "",
          email: profileData.email || "",
          phone_number: profileData.phone_number || "",
          address: profileData.address || "",
        });
      } catch (err) {
        console.error("‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", err);
        setError("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ");
      }
    };

    fetchProfile();
  }, []); // ‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà [] ‡∏ß‡πà‡∏≤‡∏á‡πÜ ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡πÉ‡∏´‡πâ effect ‡∏ô‡∏µ‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ï‡∏≠‡∏ô component ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  // --- ‚¨áÔ∏è 3. ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô handleSubmit ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ PATCH ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï ---
  const handleSubmit = async (e) => {
    e.preventDefault();
    setError("");

    try {
      // ‡πÉ‡∏ä‡πâ axios.patch (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà post) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
      const response = await axios.patch("http://localhost:8000/api/profile/", {
        first_name: form.firstname,
        last_name: form.lastname,
        email: form.email,
        phone_number: form.phone_number,
        address: form.address,
      });

      console.log("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", response.data);
      alert("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"); // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    } catch (err) {
      console.error("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", err);
      const errorData = err.response?.data;
      if (errorData) {
        // ‡πÅ‡∏õ‡∏•‡∏á object error ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
        const errorMessages = Object.entries(errorData)
          .map(([key, value]) => `${key}: ${value}`)
          .join("\n"); // \n ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà
        setError(errorMessages);
      } else if (data.non_field_errors) {
        setError(data.non_field_errors[0]);
      } else {
        setError("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
      }
    }
  };

  return (
    <div className="flex justify-center items-center h-auto mt-[12%]">
      <div className="w-md mx-md p-6">
        <h2 className="text-4xl mb-10 text-center font-sans">‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</h2>
        <form onSubmit={handleSubmit}>
          {/* ... TextInput ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ... */}
          <div className="flex">
            <TextInput
              label="Firstname"
              name="firstname"
              value={form.firstname}
              onChange={handleChange}
              placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
              className=" mr-[10%] w-[95%]"
            />
            <TextInput
              label="Lastname"
              name="lastname"
              value={form.lastname}
              onChange={handleChange}
              placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
              className="w-[100%]"
            />
          </div>
          <div className="flex">
            <TextInput
              label="Phone number"
              name="phone_number"
              value={form.phone_number}
              onChange={handleChange}
              placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
              className=" mr-[10%] w-[95%]"
            />
            <TextInput
              label="Email"
              type="email"
              name="email"
              value={form.email}
              onChange={handleChange}
              placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
            />
          </div>
          <TextInput
            label="Address"
            name="address"
            value={form.address}
            onChange={handleChange}
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
          />

          {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° whitespace-pre-line ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ \n ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô */}
          {error && (
            <p className="text-red-500 text-sm mt-2 whitespace-pre-line">
              {error}
            </p>
          )}
          <button
            type="submit"
            className="w-full py-2 mt-4 bg-blue-500 text-white rounded-xl hover:bg-blue-600 transition-all"
          >
            ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï
          </button>
        </form>
      </div>
    </div>
  );
}
